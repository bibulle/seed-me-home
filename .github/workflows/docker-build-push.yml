name: Build and Publish

on:
  # run it on push to the default repository branch
  push:
    branches:
      - 'master'

  # run it during pull request
  pull_request:

env:
  APP_NAME: foo
  VERSION: 0.0.0
  APP_PATH: ./application
  OPS_PATH: ./gitops
  K8S_FILE: seed-me-home/values.yaml

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    env: 
        actions_token: ${{ secrets.ACTIONS_TOKEN }}
        dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
        dockerhub_password: ${{ secrets.DOCKERHUB_TOKEN }}


    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: ${{env.APP_PATH}}

      - name: Checkout gitops
        uses: actions/checkout@v3
        if: ${{ env.actions_token != '' }}
        with:
          repository: bibulle/myKubernetesConfig
          token: ${{ env.actions_token }}
          path: ${{env.OPS_PATH}}

      - name: Read package.json
        id: read_package_json
        run: |
          echo "PACKAGE_JSON=$(jq -c . < ${{env.APP_PATH}}/package.json)" >> $GITHUB_ENV

      - name: Retrieve values from package.json
        id: retrieve_package_json
        run: |
          echo "APP_NAME=${{fromJson(env.PACKAGE_JSON).name}}" >> $GITHUB_ENV
          echo "VERSION=${{fromJson(env.PACKAGE_JSON).version}}" >> $GITHUB_ENV

      - name: Calculate docker tags
        if: ${{ env.dockerhub_username != '' && env.dockerhub_password != '' }}
        run : |
          echo "DOCKER_TAGS=${{env.dockerhub_username}}/${{env.APP_NAME}}:latest, ${{env.dockerhub_username}}/${{env.APP_NAME}}:V${{env.VERSION}}" >> $GITHUB_ENV

      - name: Calculate docker tags
        if: ${{ env.dockerhub_username == '' || env.dockerhub_password == '' }}
        run : |
          echo "DOCKER_TAGS=${{env.APP_NAME}}:latest" >> $GITHUB_ENV

      - run: |
          echo "Building : ${{env.APP_NAME}}:${{env.VERSION}}"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        id: login_dockerhub
        uses: docker/login-action@v2
        if: ${{ env.dockerhub_username != '' && env.dockerhub_password != '' }}
        with:
          username: ${{ env.dockerhub_username }}
          password: ${{ env.dockerhub_password }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ${{env.APP_PATH}}
          push: ${{ env.dockerhub_username != '' && env.dockerhub_password != '' }}
          tags: ${{env.DOCKER_TAGS}}

      - name: Update k8s yaml file
        id: update_yml
        if: ${{ env.actions_token != '' }}
        run: |
          cd ${{env.OPS_PATH}}
          image="bibulle\/${{env.APP_NAME}}"
          sed -i "s/image: ${image}:.*/image: ${image}:V${{env.VERSION}}/g" ${{env.K8S_FILE}}
          status=`git status -s | wc -l | bc`
          echo "line_modified=$status" >> $GITHUB_OUTPUT

      - name: Commit k8s yaml file
        id: commit_yml
        if: env.actions_token != '' && steps.update_yml.outputs.line_modified != '0'
        run: |
          cd ${{env.OPS_PATH}}
          git config --global user.email "${GITHUB_ACTOR}"
          git config --global user.name "${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit -am "Update version of ${{env.APP_NAME}}"
          git push
