name: Build and Publish

on:
  # run it on push to the default repository branch
  push:
    branches:
      - "master"

  # run it during pull request
  pull_request:

env:
  APP_NAME: foo
  VERSION: 0.0.0
  APP_PATH: ./application
  OPS_PATH: ./gitops
  K8S_FILE: seed-me-home/30-deployment-local.yaml

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ${{env.APP_PATH}}

      - name: Checkout gitops
        uses: actions/checkout@v2
        with:
          repository: bibulle/myKubernetesConfig
          token: ${{ secrets.ACTIONS_TOKEN }}
          path: ${{env.OPS_PATH}}

      - id: get_from_package
        run: |
          content=`cat ${{env.APP_PATH}}/package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"
      - run: echo "APP_NAME=${{fromJson(steps.get_from_package.outputs.packageJson).name}}" >> $GITHUB_ENV
      - run: echo "VERSION=${{fromJson(steps.get_from_package.outputs.packageJson).version}}" >> $GITHUB_ENV

      - run: |
          echo "Building : ${{env.APP_NAME}}:${{env.VERSION}}"

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Login to DockerHub
      #   id: login_dockerhub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ${{env.APP_PATH}}
      #     push: true
      #     tags: ${{secrets.DOCKERHUB_USERNAME}}/${{env.APP_NAME}}:latest, ${{secrets.DOCKERHUB_USERNAME}}/${{env.APP_NAME}}:V${{env.VERSION}}

      - name: Update k8s yaml file
        id: update_yml
        run: |
          cd ${{env.OPS_PATH}}
          image="bibulle\/${{env.APP_NAME}}"
          sed -i "s/image: ${image}:.*/image: ${image}:V${{env.VERSION}}/g" ${{env.K8S_FILE}}
          status=`git status -s | wc -l | bc`
          echo "::set-output name=line_modified::$status"

      - name: Commit k8s yaml file
        id: commit_yml
        if: steps.update_yml.outputs.line_modified != '0'
        run: |
          git status
          git config --global user.email "${GITHUB_ACTOR}"
          git config --global user.name "${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit -am "Update version of ${{env.APP_NAME}}"
          git push
